<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:controls="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel" 
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors">
    
    <!--Icons-->

    <BitmapImage x:Key="VegoLogo" UriSource="pack://application:,,,/Shared\Resources\VegoIcon.png" RenderOptions.BitmapScalingMode="HighQuality"/>

    <!--Colors-->
    
    <Brush x:Key="MainBackground">#FFF</Brush>

    <LinearGradientBrush x:Key="GreenFade" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#98FFB5" Offset="0"/>
        <GradientStop Color="#5AC177" Offset="1"/>
    </LinearGradientBrush>
    
    
    <!--Fonts-->

    <FontFamily x:Key="Exo2">pack://application:,,,/Shared\Fonts\#Exo 2</FontFamily>

    <!--Styles-->
    <Style x:Key="RoundedContextMenu" TargetType="ContextMenu">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border MinHeight="20" MinWidth="100" CornerRadius="10" Padding="4" Margin="4" Background="White">
                        <Border.Effect>
                            <DropShadowEffect
                                ShadowDepth="1"
                                BlurRadius="4"
                                Opacity="0.15"
                                RenderingBias="Performance"
                                />
                        </Border.Effect>
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="MenuItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="MenuItem">
                                <Border Name="bg" Padding="8,2" CornerRadius="5" Cursor="Hand">
                                    <TextBlock Text="{TemplateBinding Header}" FontFamily="{StaticResource Exo2}"/>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="bg" Value="#D3F3D5"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="GreenButton14px" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="#5AC177"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10, 3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="14">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#6AE38C"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#4CAA67"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="#9EBBA7"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#EBEBEB"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GreenButton12px" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="#5AC177"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10, 3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="12">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#6AE38C"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#4CAA67"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="#9EBBA7"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#EBEBEB"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WhiteButton12px" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#4DAB68"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10, 3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="12">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#EBFFEC"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#DDF0DD"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="#DEDEDE"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#8EAF97"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RedButton12px" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="#FFC5C5"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10, 3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="12">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFDEDE"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#EDC4C4"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="#D6C4C4"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#EBEBEB"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DrawerMenuItem" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10, 8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="14">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#99ffffff"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#ddffffff"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="#fff"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProductsListBox" TargetType="ListBox">
        <Style.Resources>
            <SolidColorBrush x:Key="TestColor1">#aaf</SolidColorBrush>
            <SolidColorBrush x:Key="TestColor2">#aed</SolidColorBrush>
            <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
            <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
        </Style.Resources>
        <Setter Property="SelectionMode" Value="Extended"/>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel 
                        MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                        />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border
                                    CornerRadius="20">

                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="4" ShadowDepth="1"/>
                                    </Border.Effect>

                                    <Grid>
                                        <Grid
                                            x:Name="Bd"
                                            Height="164"
                                            Width="174"
                                            Background="#fff"
                                            Margin="6">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="116"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <Image
                                                Grid.Row="0"
                                                Source="{Binding Image}"
                                                Margin="5"
                                                RenderOptions.BitmapScalingMode="Fant"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"/>

                                            <StackPanel
                                                Grid.Row="1">
                                                <TextBlock 
                                                    Text="{Binding Title}"/>
                                                <TextBlock 
                                                    Text="{Binding Price}"
                                                    TextAlignment="Right"/>
                                            </StackPanel>

                                            <Grid.InputBindings>
                                                <MouseBinding
                                                MouseAction="LeftDoubleClick"
                                                Command="{Binding OnDoubleClickCommand}"/>
                                            </Grid.InputBindings>
                                        </Grid>
                                    </Grid>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource TestColor1}"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource TestColor1}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProductsItemsPanel" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}">
                        <ScrollViewer 
                            CanContentScroll="True" 
                            Padding="{TemplateBinding Padding}"
                            Focusable="False"
                            VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <controls:VirtualizingWrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border
                        Cursor="Hand"
                        x:Name="Bd"
                        CornerRadius="20"
                        Background="#fff"
                        Margin="6"
                        Opacity="{Binding CardOpacity}">
                        <Grid>
                            <Rectangle
                                Fill="black"
                                RadiusX="20"
                                RadiusY="20"
                                Margin="-0.8"
                                Opacity="0.2">
                            </Rectangle>
                            <Grid
                                Height="164"
                                Width="174">

                                <Border
                                CornerRadius="20,20,0,0"
                                    Height="116"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Stretch"
                                    Visibility="{Binding ShimmerVisibility}">
                                    <Border.Background>
                                        <LinearGradientBrush
                                            MappingMode="RelativeToBoundingBox"
                                            StartPoint="0,0"
                                            EndPoint="1,1">
                                            <GradientStop
                                                Color="DarkGray"
                                                Offset="0"
                                                x:Name="ShimmerStart"/>

                                            <GradientStop
                                                Color="LightGray"
                                                Offset="0"
                                                x:Name="ShimmerCenter"/>

                                            <GradientStop
                                                Color="DarkGray"
                                                Offset="1"
                                                x:Name="ShimmerEnd"/>
                                        </LinearGradientBrush>
                                    </Border.Background>

                                    <Border.Triggers>
                                        <EventTrigger RoutedEvent="Loaded">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard TargetProperty="Offset" TargetName="ShimmerCenter">
                                                        <DoubleAnimation From="0" To="1"
                                                AutoReverse="True"
                                                RepeatBehavior="Forever"
                                                Duration="0:0:0.6"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </Border.Triggers>
                                </Border>

                                <Border
                                    x:Name="img"
                                    CornerRadius="20,20,0,0"
                                    Height="116"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Stretch"
                                    
                                    >
                                    <Border.Background>
                                        <ImageBrush
                                            ImageSource="{Binding Image}"
                                            RenderOptions.BitmapScalingMode="Fant"
                                            Stretch="UniformToFill"
                                            AlignmentX="Center"
                                            AlignmentY="Center"/>
                                    </Border.Background>
                                </Border>

                                <Border
                                    x:Name="Cover"
                                    CornerRadius="20"
                                    Background="White"
                                    Height="68"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Bottom">
                                    <StackPanel
                                        Margin="16, 10">
                                        <TextBlock 
                                            Text="{Binding Title}"/>
                                        <TextBlock 
                                            Text="{Binding Price}"/>
                                    </StackPanel>
                                </Border>
                                
                            </Grid>
                        </Grid>

                        <Border.InputBindings>
                            <MouseBinding
                                MouseAction="LeftDoubleClick"
                                Command="{Binding OnDoubleClickCommand}"/>
                        </Border.InputBindings>
                    </Border>

                    <DataTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Cover" Value="#E0FFE8">
                            </Setter>
                        </MultiTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CategoriesItemsPanel" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}">
                        <ScrollViewer 
                            CanContentScroll="True" 
                            Padding="{TemplateBinding Padding}"
                            VerticalScrollBarVisibility="Auto"
                            Focusable="False">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border
                        Cursor="Hand"
                        x:Name="Bd"
                        CornerRadius="12"
                        Background="#75ffffff"
                        Margin="3">

                        <Grid
                            Margin="12,3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock 
                                Grid.Column="0"
                                Text="{Binding Name}">
                            </TextBlock>

                            <Grid.ContextMenu>
                                <ContextMenu
                                    Style="{StaticResource RoundedContextMenu}">
                                    <MenuItem Header="Изменить" Command="{Binding OnEditClick}"/>
                                    <MenuItem Header="Удалить" Command="{Binding OnDeleteClick}"/>
                                </ContextMenu>
                            </Grid.ContextMenu>
                        </Grid>

                        <Border.InputBindings>
                            <MouseBinding
                                        MouseAction="LeftClick"
                                        Command="{Binding OnClick}"/>
                        </Border.InputBindings>
                    </Border>

                    <DataTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd">
                                <Setter.Value>#ddffffff</Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <DataTrigger Binding="{Binding IsChecked}" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#ddffffff"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProductPhotosItemsPanel" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}">
                        <ScrollViewer 
                            CanContentScroll="True" 
                            Padding="{TemplateBinding Padding}"
                            VerticalScrollBarVisibility="Auto"
                            Focusable="False">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <controls:VirtualizingWrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid
                        Cursor="Hand"
                        x:Name="Img"
                        Margin="10">
                        <Border
                        CornerRadius="20"
                            Visibility="{Binding LowShimmerVisibility}">
                            <Border.Background>
                                <LinearGradientBrush
                                MappingMode="RelativeToBoundingBox"
                                StartPoint="0,0"
                                EndPoint="1,1">
                                    <GradientStop
                                    Color="DarkGray"
                                    Offset="0"
                                    x:Name="ShimmerStart"/>

                                    <GradientStop
                                    Color="LightGray"
                                    Offset="0"
                                    x:Name="ShimmerCenter"/>

                                    <GradientStop
                                    Color="DarkGray"
                                    Offset="1"
                                    x:Name="ShimmerEnd"/>
                                </LinearGradientBrush>
                            </Border.Background>

                            <Border.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard TargetProperty="Offset" TargetName="ShimmerCenter">
                                                <DoubleAnimation From="0" To="1"
                                                AutoReverse="True"
                                                RepeatBehavior="Forever"
                                                Duration="0:0:0.6"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Border.Triggers>
                        </Border>

                        <Border
                            CornerRadius="20"
                            Height="116"
                            Width="174">
                            <Border.Background>
                                <ImageBrush
                                    ImageSource="{Binding LowPhoto}"
                                    RenderOptions.BitmapScalingMode="Fant"
                                    AlignmentX="Center"
                                    AlignmentY="Center"
                                    Stretch="UniformToFill"/>
                            </Border.Background>
                        </Border>

                        <Border
                            x:Name="Cover"
                            CornerRadius="20"
                            Background="#50000000"
                            Visibility="Collapsed">
                            <StackPanel>
                                <Button
                                    Content="X"
                                    Height="20"
                                    Width="20"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Margin="10"
                                    Command="{Binding FirstButtonCommand}"/>

                                <Button
                                    Content="*"
                                    Height="20"
                                    Width="20"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Margin="10"
                                    Command="{Binding SecondButtonCommand}"/>

                            </StackPanel>

                            <Border.InputBindings>
                                <MouseBinding
                                    MouseAction="LeftClick"
                                    Command="{Binding OnPressCommand}"/>
                            </Border.InputBindings>
                        </Border>
                    </Grid>


                    <DataTemplate.Triggers>
                        <Trigger SourceName="Img" Property="IsMouseOver" Value="true">
                            <Setter TargetName="Cover" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger SourceName="Img" Property="IsMouseOver" Value="false">
                            <Setter TargetName="Cover" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AllPhotosItemsPanel" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}">
                        <ScrollViewer 
                            CanContentScroll="True" 
                            Padding="{TemplateBinding Padding}"
                            VerticalScrollBarVisibility="Auto"
                            Focusable="False">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <controls:VirtualizingWrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid
                        Cursor="Hand"
                        x:Name="Img"
                        Margin="10">
                        <Border
                        CornerRadius="20"
                            Visibility="{Binding LowShimmerVisibility}">
                            <Border.Background>
                                <LinearGradientBrush
                                MappingMode="RelativeToBoundingBox"
                                StartPoint="0,0"
                                EndPoint="1,1">
                                    <GradientStop
                                    Color="DarkGray"
                                    Offset="0"
                                    x:Name="ShimmerStart"/>

                                    <GradientStop
                                    Color="LightGray"
                                    Offset="0"
                                    x:Name="ShimmerCenter"/>

                                    <GradientStop
                                    Color="DarkGray"
                                    Offset="1"
                                    x:Name="ShimmerEnd"/>
                                </LinearGradientBrush>
                            </Border.Background>

                            <Border.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard TargetProperty="Offset" TargetName="ShimmerCenter">
                                                <DoubleAnimation From="0" To="1"
                                                AutoReverse="True"
                                                RepeatBehavior="Forever"
                                                Duration="0:0:0.6"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Border.Triggers>
                        </Border>

                        <Border
                            CornerRadius="20"
                            Height="116"
                            Width="174">
                            <Border.Background>
                                <ImageBrush
                                    ImageSource="{Binding LowPhoto}"
                                    RenderOptions.BitmapScalingMode="Fant"
                                    AlignmentX="Center"
                                    AlignmentY="Center"
                                    Stretch="UniformToFill"/>
                            </Border.Background>
                        </Border>

                        <Border
                            x:Name="Cover"
                            CornerRadius="20"
                            Background="#50000000"
                            Visibility="Collapsed">
                            <StackPanel>
                                <Button
                                    Content="X"
                                    Height="20"
                                    Width="20"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Margin="10"
                                    Command="{Binding FirstButtonCommand}"/>

                                <Button
                                    Content="+"
                                    Height="20"
                                    Width="20"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Margin="10"
                                    Command="{Binding SecondButtonCommand}"/>

                            </StackPanel>

                            <Border.InputBindings>
                                <MouseBinding
                                    MouseAction="LeftClick"
                                    Command="{Binding OnPressCommand}"/>
                            </Border.InputBindings>
                        </Border>
                    </Grid>


                    <DataTemplate.Triggers>
                        <Trigger SourceName="Img" Property="IsMouseOver" Value="true">
                            <Setter TargetName="Cover" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger SourceName="Img" Property="IsMouseOver" Value="false">
                            <Setter TargetName="Cover" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BurgerMenu" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="#5AC177"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="100">
                        <StackPanel
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center">
                            <Border Margin="8, 1.5" Background="White" CornerRadius="2" Height="4"/>
                            <Border Margin="8, 1.5" Background="White" CornerRadius="2" Height="4"/>
                            <Border Margin="8, 1.5" Background="White" CornerRadius="2" Height="4"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#6AE38C"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#4CAA67"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="#9EBBA7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CaptionButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#317042"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5" Width="38" Height="22">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#0A000000"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#19589A5A"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="#AFAFAF"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#EBEBEB"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VegoWindow" TargetType="Window">
        <Setter Property="WindowStyle" Value="SingleBorderWindow"/>
        <Setter Property="Padding" Value="100"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CaptionHeight="33"
                    UseAeroCaptionButtons="False"
                    GlassFrameThickness="1"
                    />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border
                        Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="33"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <AdornerDecorator
                                Grid.Row="1">
                                <ContentPresenter/>
                            </AdornerDecorator>

                            <Grid
                                Grid.Row="0">
                                <TextBlock
                                    Text="{TemplateBinding Title}"
                                    VerticalAlignment="Bottom"
                                    HorizontalAlignment="Left"
                                    Margin="10,0,0,3"
                                    FontSize="14"
                                    FontFamily="{StaticResource Exo2}"
                                    />
                                <StackPanel
                                    WindowChrome.IsHitTestVisibleInChrome="True"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Right"
                                    Margin="0,0,10,3">
                                    <Button 
                                    x:Name="MinimizeBtn" 
                                    Command="{Binding MinimizeCommand}"
                                    Style="{StaticResource CaptionButton}"
                                    VerticalAlignment="Bottom"
                                    Padding="8">
                                        <Viewbox>
                                            <Grid>
                                                <Path Data="M0 9.5C0 8.67157 0.508767 8 1.13636 8H23.8636C24.4912 8 25 8.67157 25 9.5C25 10.3284 24.4912 11 23.8636 11H1.13636C0.508768 11 0 10.3284 0 9.5Z" Fill="#317042"/>
                                            </Grid>
                                        </Viewbox>
                                    </Button>
                                    <Button 
                                    x:Name="MaximizeBtn" 
                                    Command="{Binding MaximizeCommand}"
                                    Style="{StaticResource CaptionButton}"
                                    VerticalAlignment="Bottom"
                                    Padding="5">
                                        <Viewbox>
                                            <Grid>
                                                <Path Data="M2.34082 0C1.04802 0 0 1.11157 0 2.48276V15.5172C0 16.8884 1.04802 18 2.34082 18H22.6592C23.952 18 25 16.8884 25 15.5172V2.48276C25 1.11157 23.952 0 22.6592 0H2.34082ZM3.51124 2.48276C2.86484 2.48276 2.34082 3.03854 2.34082 3.72414V14.2759C2.34082 14.9615 2.86484 15.5172 3.51124 15.5172H21.4888C22.1352 15.5172 22.6592 14.9615 22.6592 14.2759V3.72414C22.6592 3.03854 22.1352 2.48276 21.4888 2.48276H3.51124Z" Fill="#317042"/>
                                            </Grid>
                                        </Viewbox>
                                    </Button>
                                    <Button 
                                    Command="{Binding CloseCommand}"
                                    Style="{StaticResource CaptionButton}"
                                    VerticalAlignment="Bottom"
                                    Padding="2,5,6,5">
                                        <Viewbox>
                                            <Grid>
                                                <Path Data="M4.34057 1.98495C3.88648 1.53086 3.88648 0.794646 4.34057 0.340563C4.79466 -0.113521 5.53088 -0.113521 5.98497 0.340563L20.429 14.7844C20.8831 15.2385 20.8831 15.9747 20.429 16.4288C19.9749 16.8829 19.2387 16.8829 18.7846 16.4288L4.34057 1.98495Z" Fill="#317042"/>
                                                <Path Data="M19.015 0.571224C19.4691 0.11714 20.2053 0.117139 20.6594 0.571223C21.1135 1.02531 21.1135 1.76152 20.6594 2.21561L6.2154 16.6594C5.76131 17.1135 5.02508 17.1135 4.57099 16.6594C4.1169 16.2054 4.1169 15.4691 4.57099 15.0151L19.015 0.571224Z" Fill="#317042"/>
                                            </Grid>
                                        </Viewbox>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="MaximizeBtn" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="MaximizeBtn" Property="Content">
                                <Setter.Value>
                                    <Viewbox>
                                        <Grid>
                                            <Path Data="M2.34082 0C1.04802 0 0 1.11157 0 2.48276V15.5172C0 16.8884 1.04802 18 2.34082 18H22.6592C23.952 18 25 16.8884 25 15.5172V2.48276C25 1.11157 23.952 0 22.6592 0H2.34082ZM3.51124 2.48276C2.86484 2.48276 2.34082 3.03854 2.34082 3.72414V14.2759C2.34082 14.9615 2.86484 15.5172 3.51124 15.5172H21.4888C22.1352 15.5172 22.6592 14.9615 22.6592 14.2759V3.72414C22.6592 3.03854 22.1352 2.48276 21.4888 2.48276H3.51124Z" Fill="#317042"/>
                                        </Grid>
                                    </Viewbox>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="MaximizeBtn" Property="Content">
                                <Setter.Value>
                                    <Viewbox>
                                        <Grid>
                                            <Path Data="M2.38095 3.6C1.06599 3.6 0 4.67452 0 6V15.6C0 16.9255 1.06599 18 2.38095 18H19.0476C20.3626 18 21.4286 16.9255 21.4286 15.6V6C21.4286 4.67452 20.3626 3.6 19.0476 3.6H2.38095ZM3.57143 6C2.91395 6 2.38095 6.53726 2.38095 7.2V14.4C2.38095 15.0627 2.91395 15.6 3.57143 15.6H17.8571C18.5146 15.6 19.0476 15.0627 19.0476 14.4V7.2C19.0476 6.53726 18.5146 6 17.8571 6H3.57143Z" Fill="#317042"/>
                                            <Path Data="M5.95238 0C5.05108 0 4.26674 0.504809 3.86247 1.24923C3.54676 1.83057 4.10442 2.4 4.7619 2.4H20.2381C22.619 2.4 22.619 2.4 22.619 4.8V13.2C22.619 13.8627 23.184 14.4249 23.7607 14.1066C24.4992 13.6991 25 12.9085 25 12V2.4C25 1.07452 23.934 0 22.619 0H5.95238Z" Fill="#317042"/>
                                        </Grid>
                                    </Viewbox>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#6AE38C"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#4CAA67"/>
    <Style x:Key="RoundedTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="12" Padding="5,2,5,4">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RoundedTextBox18px" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="16" Padding="10,2,10,4">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style x:Key="TransparentGroupBox" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="#D5DFE5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.RowSpan="2" Grid.Row="0">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ContentPresenter Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
    <Style x:Key="OrdersList" TargetType="{x:Type ItemsControl}">
        <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="5" SnapsToDevicePixels="true" CornerRadius="15">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="FirstCell" Width="150"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition x:Name="SecondCell" Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition x:Name="ThirdCell" Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition x:Name="FourthCell" Width="120"/>
                                </Grid.ColumnDefinitions>
                                
                                <GridSplitter 
                                    Grid.Column="1" ShowsPreview="True" Width="2"
                                    HorizontalAlignment="Center" VerticalAlignment="Stretch" />
                                
                                <GridSplitter 
                                    Grid.Column="3" ShowsPreview="True" Width="2"
                                    HorizontalAlignment="Center" VerticalAlignment="Stretch" />

                                <GridSplitter 
                                    Grid.Column="5" ShowsPreview="True" Width="2"
                                    HorizontalAlignment="Center" VerticalAlignment="Stretch" />

                                <TextBlock
                                    x:Name="DateCell"
                                    Margin="5,2"
                                    Grid.Column="0"
                                    Text="Дата поступления"
                                    Cursor="Hand"/>

                                <TextBlock
                                    x:Name="IdCell"
                                    Margin="5,2"
                                    Grid.Column="2"
                                    Text="Номер"
                                    Cursor="Hand"/>

                                <TextBlock
                                    x:Name="ClientCell"
                                    Margin="5,2"
                                    Grid.Column="4"
                                    Text="Клиент"
                                    Cursor="Hand"/>

                                <TextBlock
                                    x:Name="StatusCell"
                                    Margin="5,2"
                                    Grid.Column="6"
                                    Text="Статус"
                                    Cursor="Hand"/>
                            </Grid>
                            
                            <ScrollViewer Grid.Row="1" Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" SourceName="DateCell" Value="True">
                            <Setter Property="Background" TargetName="DateCell" Value="#E0FFE8"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" SourceName="IdCell" Value="True">
                            <Setter Property="Background" TargetName="IdCell" Value="#E0FFE8"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" SourceName="ClientCell" Value="True">
                            <Setter Property="Background" TargetName="ClientCell" Value="#E0FFE8"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" SourceName="StatusCell" Value="True">
                            <Setter Property="Background" TargetName="StatusCell" Value="#E0FFE8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border x:Name="Bg" CornerRadius="5" Padding="0, 4" Cursor="Hand">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding ElementName=FirstCell, Path=Width, Mode=TwoWay}"/>
                                <ColumnDefinition Width="{Binding ElementName=SecondCell, Path=Width, Mode=TwoWay}"/>
                                <ColumnDefinition Width="{Binding ElementName=ThirdCell, Path=Width, Mode=TwoWay}"/>
                                <ColumnDefinition Width="{Binding ElementName=FourthCell, Path=Width, Mode=TwoWay}"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock
                            Margin="5,2"
                            Grid.Column="0"
                            Text="{Binding RegistrationDate, StringFormat='dd.MM.yy  HH:mm'}"/>

                            <TextBlock
                            Margin="5,2"
                            Grid.Column="1"
                            Text="{Binding Id}"/>

                            <TextBlock
                            Margin="5,2"
                            Grid.Column="2"
                            Text="{Binding ClientName}"/>

                            <TextBlock
                            Margin="5,2"
                            Grid.Column="3"
                            Text="{Binding Status}"/>
                        </Grid>
                    </Border>

                    <DataTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bg" Value="#E0FFE8"/>
                        </Trigger>
                    </DataTemplate.Triggers>

                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>